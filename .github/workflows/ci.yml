name: continuous-integration

on:
  pull_request:
  push:
    branches:
      - devel
  release:

jobs:
  check-style:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Check style
        run: |
          black --check .

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
        
      - name: Install system packages
        run: |
          sudo apt -y install libegl1

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Run tests
        run: |
          pytest

  # build-binaries:
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     max-parallel: 6
  #     fail-fast: false
  #     matrix:
  #       os: [macos-latest, windows-latest]
  #       python-version: [3.8, "3.10", "3.12"]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install packaging dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install .[dev]

  #     - name: Install Inno Setup
  #       if: runner.os == 'Windows'
  #       run: |
  #         choco install innosetup

  #     - name: Run PyInstaller
  #       run: |
  #         cd package
  #         pyinstaller --noconfirm crispy.spec
  #         cd ..

  #     - name: Recursively list folder
  #       run: |
  #         ls -R

  #     - name: Upload the Windows installer
  #       uses: actions/upload-artifact@v3
  #       if: runner.os == 'Windows'
  #       with:
  #         name: Crispy-Windows-2019-Python-${{ matrix.python-version }}
  #         path: package\artifacts\*.exe

  #     - name: Upload the macOS app
  #       uses: actions/upload-artifact@v3
  #       if: runner.os == 'macOS'
  #       with:
  #         name: Crispy-macOS-10.15-Python-${{ matrix.python-version }}
  #         path: package/artifacts/*.dmg
